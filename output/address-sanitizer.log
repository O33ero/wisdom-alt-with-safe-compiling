Hello there
1. Receive wisdom
2. Add wisdom
Selection >
Enter some wisdom
{Строка с >1024 символами}
warning: this program uses gets(), which is unsafe.
=================================================================
==6141==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x00016fccae80 at pc 0x0001005dd0e8 bp 0x00016fccadd0 sp 0x00016fcca580
READ of size 332 at 0x00016fccae80 thread T0
    #0 0x1005dd0e4 in wrap_strcpy+0x4e4 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x4d0e4)
    #1 0x1001375b4 in put_wisdom+0x12c (a.out:arm64+0x1000035b4)
    #2 0x6b616a66686f  (<unknown module>)

Address 0x00016fccae80 is located in stack of thread T0 at offset 160 in frame
    #0 0x100137494 in put_wisdom+0xc (a.out:arm64+0x100003494)

  This frame has 1 object(s):
    [32, 160) 'wis' <== Memory access at offset 160 overflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x4d0e4) in wrap_strcpy+0x4e4
Shadow bytes around the buggy address:
  0x00016fccac00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x00016fccac80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x00016fccad00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x00016fccad80: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
  0x00016fccae00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x00016fccae80:[f3]f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x00016fccaf00: 00 00 00 00 f1 f1 f1 f1 00 00 00 00 00 00 00 00
  0x00016fccaf80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x00016fccb000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x00016fccb080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x00016fccb100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==6141==ABORTING
